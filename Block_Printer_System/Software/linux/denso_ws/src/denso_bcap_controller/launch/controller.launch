<launch>
    <!-- Specify the location of RC7M -->
    <arg name="robot_ip" default="192.168.32.19"/>
    <arg name="robot_port" default="5007"/>
    <!-- Choose connection mode between ROS and RC7M. TCP and UDP are available -->
    <arg name="connecting_mode" default="TCP"/>
    <!-- Choose whether RC7M controls the robot on slave-mode -->
    <arg name="use_slave_mode" default="false"/>
    <!-- use or not trajectory filter if MoveIt! generates a trajectory with too many points -->
    <arg name="use_trajectory_reducer" default="false"/>
    <!-- True if you want to control a hand via denso b-Cap -->
    <arg name="use_hand" default="true"/>
    <!-- True if you don't want to control a robot, only read joint states -->
    <arg name="readonly" default="false"/>
    <!-- Logger option -->
    <arg name="controller_output" default="screen"/>
    <!--  -->
    <arg name="load_robot_description" default="true"/>
    <!-- The name of the parameter under which the URDF is loaded -->
    <arg name="robot_description" default="robot_description"/>
    <!-- Load universal robot description format (URDF) -->
    <param if="$(arg load_robot_description)" name="$(arg robot_description)" command="xacro --inorder  '$(find vp6242_description)/urdf/vp6242_block_printer_macro.xacro'"/>

    <!-- Run robot controller -->
    <node name="denso_bcap_controller" pkg="denso_bcap_controller" type="denso_bcap_controller_node" output="$(arg controller_output)">
        <param name="robot_ip" value="$(arg robot_ip)"/>
        <param name="robot_port" type="string" value="$(arg robot_port)"/>
        <param name="connecting_mode" value="$(arg connecting_mode)"/>
        <param name="use_slave_mode" value="$(arg use_slave_mode)"/>
        <param name="use_trajectory_reducer" value="$(arg use_trajectory_reducer)"/>
        <param name="use_hand" value="$(arg use_hand)"/>
        <param name="readonly" value="$(arg readonly)"/>
        <param name="robot_description_name" value="$(arg robot_description)"/>
    </node>
    <!-- Run trajectory point reducer -->
    <group if="$(arg use_trajectory_reducer)">
        <node name="trajectory_reducer" pkg="trajectory_reducer" type="trajectory_reducer_node" output="screen"/>
    </group>
</launch>
